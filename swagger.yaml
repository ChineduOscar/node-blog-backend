openapi: 3.0.0
info:
  title: Techvan API
  description: API documentation for Techvan Blog 
  contact: {}
  version: '1.0'
servers:
  - url: https://techvanapi.onrender.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
            example:
              name: bob
              email: bob@gmail.com
              password: secret
              role: admin
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserRequest'
            example:
              email: bob@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /posts:
    post:
      tags:
        - Posts
      summary: Create Post
      operationId: CreatePost
      parameters: []
      requestBody:
        description: ''
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - category
                - title
                - image
                - content
              properties:
                featured:
                  type: boolean
                category:
                  type: string
                  enum:
                    - Artificial Intelligence
                    - Blockchain
                    - Cybersecurity
                    - Events
                    - Hardware
                    - Jobs
                    - Software
                    - Startups
                title:
                  type: string
                image:
                  type: string
                  format: binary
                imgSource:
                  type: string
                content:
                  type: string
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    get:
      tags:
        - Posts
      summary: Get All Posts
      operationId: GetAllPosts
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /posts/writer:
    get:
      tags:
        - Posts
      summary: Get Writer's Posts
      operationId: GetWriterPosts
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /posts/post/{slug}:
    get:
      tags:
        - Posts
      summary: Get Post By Slug
      operationId: GetPostBySlug
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /posts/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The post ID
    get:
      tags:
        - Posts
      summary: Get Single Post
      operationId: GetPost
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false

    patch:
      tags:
        - Posts
      summary: Update Post
      operationId: UpdatePost
      parameters: []
      requestBody:
        description: ''
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - category
                - title
                - image
                - content
              properties:
                featured:
                  type: boolean
                category:
                  type: string
                  enum:
                    - Artificial Intelligence
                    - Blockchain
                    - Cybersecurity
                    - Events
                    - Hardware
                    - Jobs
                    - Software
                    - Startups
                title:
                  type: string
                image:
                  type: string
                  format: binary
                imgSource:
                  type: string
                content:
                  type: string
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
        - Posts
      summary: Delete Posts
      operationId: DeletePost
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /contact:
    post:
      tags:
        - Contact
      summary: Create contact
      operationId: CreateContact
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - message
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                phone:
                  type: string
                  example: "+1234567890"
                message:
                  type: string
                  example: "I have a question about your services."
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: bob
        email: bob@gmail.com
        password: secret
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: susan@gmail.com
        password: secret
    CreateContactRequest:
      title: CreateContactRequest
      required:
        - name
        - email
        - phone
        - message
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        message:
          type: string
      example:
        name: Johndoe
        email: Johndoe@gmail.com
        phone: "+1234567890" 
        message: I have a question about your services.   
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
  - httpBearer: []
tags:
  - name: Auth
    description: ''
  - name: Posts
    description: ''
